[importlinter]
root_package = src
include_external_packages = True

[importlinter:contract:1]
name = Core Types Contract
type = layers
layers =
    src.core.types
    src.core.dependencies
    src.core
ignore_imports =
    src.core.dependencies -> src.core.types

[importlinter:contract:2]
name = Component Isolation Contract
type = independence
modules =
    src.config
    src.geometry
    src.export
ignore_imports =
    src.config -> src.core.types
    src.geometry -> src.core.types
    src.export -> src.core.types

[importlinter:contract:3]
name = Core Types Import Contract
type = forbidden
source_modules =
    src.core.types
forbidden_modules =
    src.config.*
    src.geometry.*
    src.export.*
ignore_imports =
    src.core.dependencies -> src.core.types

[importlinter:contract:4]
name = Implementation Files Contract
type = forbidden
source_modules =
    src.*.internal
    src.*.implementations
    src.*.services
    src.*.repositories
forbidden_modules =
    src.config.*
    src.geometry.*
    src.export.*
ignore_imports =
    src.*.internal -> src.core.types
    src.*.implementations -> src.core.types
    src.*.services -> src.core.types
    src.*.repositories -> src.core.types

[importlinter:contract:5]
name = Dependency Injection Contract
type = layers
layers =
    src.core.types
    src.core.dependencies
    src.core
ignore_imports =
    src.core.dependencies -> src.core.types

[importlinter:contract:6]
name = Implementation Pattern Contract
type = layers
layers =
    src.core.types
    src.core.dependencies
    src.core.utils
    src.core.project
    src.core.managers
ignore_imports =
    src.core.dependencies -> src.core.types
    src.core.utils -> src.core.types
    src.core.project -> src.core.types
    src.core.managers -> src.core.types
